package picasso2;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;

public class PaintBrushTool extends AbstractTool {

	private int brush_size = 10;
	private Color brush_color = Color.BLACK;
	
	public PaintBrushTool() {
		
	}

	private int getSize() {
		return brush_size;
	}
	
	private void setSize(int width) {
		brush_size = width;
	}
	
	private Color getColor() {
		return brush_color;
	}
	
	private void setColor(Color new_color) {
		brush_color = new_color
	}
	
	@Override
	public Cursor getCursor() {
		//PF: Build brush_cursor_image
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		BufferedImage brush_cursor_image = new BufferedImage(16, 16, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = brush_cursor_image.createGraphics();

//		/*PF: Make graphics not look like shit lol
//		 * AKA make circles look like proper circles
//		 */
//		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		g2.setComposite(AlphaComposite.getInstance(AlphaComposite.CLEAR));
		g2.fillRect(0, 0, brush_cursor_image.getWidth(), brush_cursor_image.getHeight());

		//reset composite
		g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER));

		g2.setColor(Color.RED);
		g2.fillOval(3, 3, 8, 8);
		Point brush_cursor_hot_spot = new Point(0, 0);
		Cursor brush_cursor = toolkit.createCustomCursor(brush_cursor_image, brush_cursor_hot_spot, "Brush Cursor");

		return brush_cursor;
	}

}
