package picasso2;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;

/*PF: This is where the actions of
 * the user are taken in and 
 *  are processed in the program
 */

public class PicassoController implements MouseListener, MouseMotionListener {
	
	private PicassoModel model;
	private PicassoView view;
	private CanvasPanel canvas;
	private AbstractTool current_tool;
	private PaintBrushTool paint_brush_tool;

	public PicassoController(PicassoModel model, PicassoView view) {
		/*PF: PicassoController gets model
		 * and view, so user actions in
		 * view can be used to edit the model.
		 */
		this.model = model;
		this.view = view;
		this.canvas = view.getPicassoCanvas();
		
		/*PF: PicassoController is added
		 * as a MouseListener and 
		 * a MouseMotionListener to
		 * canvas
		 */
		this.canvas.addMouseListener(this);
		this.canvas.addMouseMotionListener(this);
		
		//PF: Create Tools
		paint_brush_tool = new PaintBrushTool(model, canvas);
		
		//PF: Current Tool set to PaintBrushTool
		current_tool = paint_brush_tool;
	}

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		canvas.setCursor(current_tool.getCursor());
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void mousePressed(MouseEvent e) {
		current_tool.mousePressed(e);
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseDragged(MouseEvent e) {
		 current_tool.mouseDragged(e);
	}

	@Override
	public void mouseMoved(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	
	
}
