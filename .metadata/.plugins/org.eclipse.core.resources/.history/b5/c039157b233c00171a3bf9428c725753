package picasso2;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;

public class PaintBrushTool extends AbstractTool {

	private int brush_size = 10;
	private Color brush_color = Color.BLACK;
	
	public PaintBrushTool() {
		
	}

	private int getSize() {
		return brush_size;
	}
	
	private void setSize(int width) {
		brush_size = width;
	}
	
	private Color getColor() {
		return brush_color;
	}
	
	private void setColor(Color new_color) {
		brush_color = new_color;
	}
	
	@Override
	public Cursor getCursor() {
		/*PF: Build 32x32 brush_cursor_image
		 * BufferedImageType is ARGB which allows for alpha values
		 * **NOTE** alpha values are necessary for transparent pixels
		 */
		BufferedImage brush_cursor_image = new BufferedImage(32, 32, BufferedImage.TYPE_INT_ARGB);
		
		//PF: Create Graphics2D object
		Graphics2D g2 = brush_cursor_image.createGraphics();

		g2.setComposite(AlphaComposite.getInstance(AlphaComposite.CLEAR));
		g2.fillRect(0, 0, brush_cursor_image.getWidth(), brush_cursor_image.getHeight());

		//reset composite
		g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER));

		g2.setColor(brush_color);
		g2.fillOval(0, 0, brush_size, brush_size);
		Point brush_cursor_hot_spot = new Point(brush_size/2, brush_size/2);
		
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		
		Cursor brush_cursor = toolkit.createCustomCursor(brush_cursor_image, brush_cursor_hot_spot, "Brush Cursor");

		return brush_cursor;
	}

}
